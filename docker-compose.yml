version: '3'
services:
  nginx:
    image: nginx:1.21-alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./data/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      auth_api:
        condition: service_started

# Сервис авторизации
  auth_api:
    container_name: auth_api
    build: ./backend/auth_service/src/
    env_file:
      - .env
    ports:
      - ${AUTH_API_PORT}:${AUTH_API_PORT}
    depends_on:
      auth_postgres:
        condition: service_healthy
      auth_redis:
        condition: service_healthy

  auth_postgres:
    image: postgres:16-alpine
    container_name: auth_postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${AUTH_POSTGRES_DBNAME}
      POSTGRES_USER: ${AUTH_POSTGRES_USER}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD}
    ports:
      - ${AUTH_POSTGRES_PORT}:${AUTH_POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$AUTH_POSTGRES_DBNAME -U $$AUTH_POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth_redis:
    image: 'redis:7.2.4'
    container_name: auth_redis
    env_file:
      - .env
    ports:
      - ${AUTH_REDIS_PORT}:${AUTH_REDIS_PORT}
    volumes:
      - ./data/auth_service/redis:/usr/local/etc/redis
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 50

  logging_jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: logging_jaeger
    env_file:
      - .env
    expose:
      - ${JAEGER_HTTP_PORT}
      - ${JAEGER_UI_PORT}